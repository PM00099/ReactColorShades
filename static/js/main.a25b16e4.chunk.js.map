{"version":3,"sources":["assets/sound1.mp3","components/Shade.js","components/Shades.js","components/ShadeInput.js","App.js","index.js"],"names":["module","exports","Shade","shade","onColorCopy","useState","copied","setCopied","useEffect","interval","setInterval","clearInterval","text","hexString","onCopy","className","style","backgroundColor","Shades","props","audioRef","useRef","shades","setShades","isColor","color","createShades","current","play","shades_Color","Values","ref","src","require","map","ShadeInput","role","aria-labelledby","type","value","onChange","e","onInputChange","target","App","setColor","randomColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gJAAAA,EAAOC,QAAU,IAA0B,oC,yICsC5BC,EAnCD,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAMC,EAAkB,EAAlBA,YAAkB,EAEVC,oBAAS,GAFC,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAIrCC,qBAAU,WACN,IAAIC,EACJ,GAAa,GAAVH,EAKC,OAJAG,EAAWC,aAAY,WACnBH,GAAU,KACZ,KAEK,WACHI,cAAcF,MAGxB,CAACH,IAOH,OACI,kBAAC,kBAAD,CAAiBM,KAAMT,EAAMU,YAAaC,OAAQ,kBALlDP,GAAU,QACVH,MAKI,yBAAKW,UAAU,QAAQC,MAAO,CAAEC,gBAAiBd,EAAMU,cAGnDP,EAAU,0BAAMS,UAAU,UAAhB,WAA4C,8BAAOZ,EAAMU,gBCIpEK,EA7BA,SAACC,GAEZ,IAAMC,EAAWC,mBAFK,EAGKhB,mBAAS,IAHd,mBAGfiB,EAHe,KAGRC,EAHQ,KAKtBf,qBAAU,WACHgB,IAAQL,EAAMM,QACbC,MAEN,CAACP,EAAMM,QAET,IAAMrB,EAAc,WAChBgB,EAASO,QAAQC,QAGfF,EAAe,WACjB,IAAMG,EAAe,IAAIC,IAAOX,EAAMM,OAAOH,OAAO,GAEpDC,EAAUM,IAGd,OACI,yBAAKd,UAAU,UACf,2BAAOgB,IAAKX,EAAUY,IAAKC,EAAQ,MAC9BX,EAAOY,KAAI,SAAC/B,GAAD,OAAW,kBAAC,EAAD,CAAOA,MAAOA,EAAOC,YAAaA,SChBtD+B,EAXI,SAAChB,GAChB,OACI,yBAAKJ,UAAU,gBACX,yBAAKA,UAAU,UAAS,0BAAMqB,KAAK,MAAOC,kBAAgB,SAAlC,2DACxB,2BAAOC,KAAK,OAAOvB,UAAU,cAAcwB,MAAOpB,EAAMM,MAAOe,SAAW,SAAAC,GAAC,OAAItB,EAAMuB,cAAcD,EAAEE,OAAOJ,UAC5G,kDACA,yBAAKxB,UAAU,UAAS,0BAAMqB,KAAK,MAAMC,kBAAgB,SAAjC,6D,gBCmBrBO,MArBf,WAAgB,IAAD,EAEYvC,mBAAS,QAFrB,mBAENoB,EAFM,KAEAoB,EAFA,KAab,OATArC,qBAAU,WACRqC,EAASC,SACT,IAQA,yBAAK/B,UAAU,OACf,kBAAC,EAAD,CAAYU,MAAOA,EAAOiB,cANN,SAACH,GACrBM,EAASN,MAMP,kBAAC,EAAD,CAAQd,MAAOA,MCjBrBsB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.a25b16e4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sound1.b362f89b.mp3\";","import React,{useState,useEffect} from 'react';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\nconst Shade = ({ shade,onColorCopy }) => {\r\n\r\n    const [copied,setCopied] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let interval;\r\n        if(copied == true){\r\n            interval = setInterval(() => {\r\n                setCopied(false);\r\n            },800)\r\n\r\n            return () => {\r\n                clearInterval(interval);\r\n            }\r\n        }\r\n    },[copied]);\r\n\r\n    const onCopy = () => {\r\n        setCopied(true);\r\n        onColorCopy();\r\n    }\r\n\r\n    return (\r\n        <CopyToClipboard text={shade.hexString()} onCopy={() => onCopy()} >\r\n            <div className=\"shade\" style={{ backgroundColor: shade.hexString() }}>\r\n\r\n            {\r\n                copied ? (<span className=\"copied\">copied!</span>) : (<span>{shade.hexString()}</span>)\r\n            }\r\n                \r\n            </div>\r\n        </CopyToClipboard>\r\n    )\r\n}\r\n\r\nexport default Shade\r\n","import React,{useEffect, useState,useRef} from 'react';\r\nimport Values from 'values.js';\r\nimport isColor from 'is-color';\r\nimport Shade from './Shade';\r\n\r\nconst Shades = (props) => {\r\n    \r\n    const audioRef = useRef();\r\n    const [shades,setShades] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if(isColor(props.color)){\r\n            createShades();\r\n        }\r\n    },[props.color]);\r\n\r\n    const onColorCopy = () => {\r\n        audioRef.current.play();\r\n    }\r\n\r\n    const createShades = () =>{\r\n        const shades_Color = new Values(props.color).shades(1);\r\n        // console.log(shades_Color);\r\n        setShades(shades_Color);\r\n    }\r\n\r\n    return (\r\n        <div className=\"shades\">\r\n        <audio ref={audioRef} src={require(\"../assets/sound1.mp3\")} />\r\n            {shades.map((shade) => <Shade shade={shade} onColorCopy={onColorCopy} />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Shades\r\n","import React from 'react'\r\n\r\nconst ShadeInput = (props) => {\r\n    return (\r\n        <div className=\"shade-search\" >\r\n            <div className=\"emojis\"><span role=\"img\"  aria-labelledby=\"false\">ðŸŽˆâœ¨ðŸŽ‰ðŸŽŠðŸŽ‡</span></div>\r\n            <input type=\"text\" className=\"shade-input\" value={props.color} onChange={(e => props.onInputChange(e.target.value))} />\r\n            <p >Click to copy color</p>\r\n            <div className=\"emojis\"><span role=\"img\" aria-labelledby=\"false\">ðŸŽˆâœ¨ðŸŽ‰ðŸŽŠðŸŽ‡</span></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShadeInput\r\n","import React,{useState, useEffect} from 'react';\nimport './App.css';\nimport Shades from './components/Shades';\nimport ShadeInput from './components/ShadeInput';\nimport randomColor from 'randomcolor';\n \nfunction App() {\n  \n  const [color,setColor] = useState(\"#000\");\n\n  useEffect(()=>{\n    setColor(randomColor());\n  },[])\n\n\n  const onInputChange = (value) => {\n    setColor(value);\n  }\n\n  return (\n    <div className=\"App\">\n    <ShadeInput color={color} onInputChange={onInputChange} />\n      <Shades color={color} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}